include mixins/team-member.pug
include mixins/holiday.pug
include mixins/sprint-header.pug
include mixins/issue-in-sprint.pug
include mixins/issue-in-worklog.pug
include mixins/worklog.pug
include mixins/sprints-box.pug

doctype html
html
  head
    meta(charset="utf-8")
    link(href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet")
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    <style type="text/css">
      != css
    </style>
    <style type="text/css">
      != fonts
    </style>
  body
    each project in projects
      each error in project.errorMessages
        p= error.message
      header.branding.container
        row
          col-s10
            != images.logo
            h2 
              = project.name
              span  report
          col-s10
            span.right generated at #{moment().format('DD.MM.YYYY HH:mm')}
      main
        if project.board.sprints.length > 0
          +sprintsBox(project.board.sprints, reportedPeriod)
        section.main-section
          .container
            .row
              .col.s12
                h3 Team members
                if project.lead
                  .row
                    .col.m3 
                      h4 PROJECT LEAD
                    .col.m9
                      .row
                        +teamMember(project.lead, project.worklogsParser, reportedPeriod)
                if project.usersStore.clients.length > 0
                  .row
                    .col.m3
                      h4 CLIENTS
                    .col.m9
                      .row
                        each client in project.usersStore.clients
                          +teamMember(client, project.worklogsParser, reportedPeriod)
                if project.usersStore.projectDevelopers.length > 0
                  .row
                    .col.m3
                      h4 PERMANENT DEVELOPERS
                    .col.m9
                      .row
                        each developer in project.usersStore.projectDevelopers
                          +teamMember(developer, project.worklogsParser, reportedPeriod)

                if project.usersStore.nonPermanentDevelopers().length > 0
                  .row
                    .col.m3
                      h4 NON PERMANENT DEVELOPERS
                    .col.m9
                      .row
                        each developer in project.usersStore.nonPermanentDevelopers()
                          +teamMember(developer, project.worklogsParser, reportedPeriod)
            
            if project.absenses.length > 0
              .row
                .col.s12
                  h3 Holidays
                  .col.m9
                    .row
                      each holiday in project.absenses
                        +holiday(holiday)

          if project.board.sprints.length > 0
            .container
              .row
                .col.s12
                  h3 Sprints
                  p.sub Active or done sprints between the dates: #{moment(reportedPeriod.startDate).format('DD.MM.YYYY')} - #{moment(reportedPeriod.finishDate).format('DD.MM.YYYY')}
          each sprint in project.board.sprints
            .single-sprint(class=sprint.state)
              +sprintHeader(sprint, sprint.summary, moment, project, jiraHost)
        section.section-header.timeline
          .container
            .row
              .col.s12
                h5 Worklogs
            .row
              .col.s12
                section.center-align
                  h6 #{moment(reportedPeriod.startDate).format('DD.MM.YYYY')} - #{moment(reportedPeriod.finishDate).format('DD.MM.YYYY')}
        section.worklogs
          .container
            .formatted-list
              .row.header
                .col.s1.center-left Issue
                .col.s4 Summary
                .col.s4.right-align Total time spent/Estimation
                .col.s2.right-align
                  | Time spent in period
                  br
                  span #{moment(reportedPeriod.startDate).format('DD.MM.YYYY')} - #{moment(reportedPeriod.finishDate).format('DD.MM.YYYY')}
              - issues = project.worklogsParser.issues(reportedPeriod)
              each issueWrap, index in issues
                - issueWorklogs = project.worklogsParser.forIssue(issueWrap.key, reportedPeriod)
                - issue = project.issues[issueWrap.key]
                +issueInWorklog(issueWrap, issue, project.worklogsParser, project.usersStore, jiraHost)
                .row.sub-list(class=Object.keys(issues).length > 3 ? 'collapsed' : '')
                  .col.s12
                    .row.header
                      .col.s1
                      .col.s2.center-left Assignee
                      .col.s4 Description
                      .col.s2.right-align When
                      .col.s2.right-align Time logged
                    each worklog in issueWorklogs.worklogs
                      - user = project.usersStore.forWorklogAuthor(worklog.author)
                      +worklog(worklog, user)
        .footer-placeholder
      footer
        .container
          .row
            - stats = project.worklogsParser.stats(reportedPeriod)
            .col.s7
            .col.s4.right-align
              p Time spent in period
              p.sub #{moment(reportedPeriod.startDate).format('DD.MM.YYYY')} - #{moment(reportedPeriod.finishDate).format('DD.MM.YYYY')}
              h3= duration(stats.timeSpentSeconds)

    script(src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js")
    script(src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous")
    script.
      $('.summary-row').click(function(){
        $(this).toggleClass('active').next('.sub-list').toggleClass('collapsed');
      })

      $(document).ready(function(){
        $('.tooltipped').each(function(e) {
          M.Tooltip.init(this)
          })
        $('.issue-tabs').each(function(e){
          M.Tabs.init(this)
          })
        $(document).scroll(function(){
          if ($(document).scrollTop() + $(window).height()/2 > $('section.timeline').position().top){
            $('footer').addClass('active')
          } else {
            $('footer').removeClass('active')
          }
          })
      });

      


